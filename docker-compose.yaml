version: '3.5'

services:
  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648"
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    ports:
      - 15672:15672
      - 5672:5672

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - '81:81'
    restart: always

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    environment:
      - QDRANT__SERVICE__HOST=0.0.0.0
    volumes:
      - ./qdrant_storage:/qdrant/storage:z
    restart: unless-stopped

  gradio:
    hostname: gradio
    build:
      context: .
      dockerfile: ./gradio/Dockerfile
    ports:
      - '7860:7860'
    restart: always
